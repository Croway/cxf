Apache CXF 3.5.3 Release Notes

1. Overview

The 3.5.x versions of Apache CXF is a significant new version of CXF
that provides several new features and enhancements.  

New features include:
* Support for Java 17
* Many updated dependencies.  We've updated to the latest versions of most
  dependencies.  Some may be incompatible with previous versions.
  Some notables that may impact applications include:
    * ehCache upgraded to 3.9.x
    * Jackson to 2.13.x
    * Mozilla Rhino upgraded to 1.7.13 (groupId/artifactId changed, be careful)
    * WSS4j 2.4.x
    * Spring Boot 2.6.x / Spring Framework 5.3.x base line
    * Apache Karaf 4.3.x base line
    * Apache HttpClient 5 support (Asynchronous Client HTTP Transport)
    * HTTP/2 support (server-side only)
    * JUnit 5 support

Important notes:
* 3.5 is the last branch of CXF that will support Java 8.   Future
  non-patch releases of CXF will require Java 11 or newer.
* The old OATH 1.0 module was removed

Users are encouraged to review the migration guide at:
http://cxf.apache.org/docs/34-migration-guide.html
for further information and requirements for upgrading from earlier
versions of CXF.


3.5.3 fixes over 14 JIRA issues reported by users and the community.


2. Installation Prerequisites 

Before installing Apache CXF, make sure the following products,
with the specified versions, are installed on your system:

    * Java 8 Development Kit
    * Apache Maven 3.x to build the samples


3.  Integrating CXF Into Your Application

If you use Maven to build your application, you need merely add
appropriate dependencies. See the pom.xml files in the samples.

If you don't use Maven, you'll need to add one or more jars to your
classpath. The file lib/WHICH_JARS should help you decide which 
jars you need.

4. Building the Samples

Building the samples included in the binary distribution is easy. Change to
the samples directory and follow the build instructions in the README.txt file 
included with each sample.

5. Reporting Problems

If you have any problems or want to send feedback of any kind, please e-mail the
CXF dev list, dev@cxf.apache.org.  You can also file issues in JIRA at:

http://issues.apache.org/jira/browse/CXF

6. Migration notes:

See the migration guide at:
http://cxf.apache.org/docs/35-migration-guide.html
for caveats when upgrading.

7. Specific issues, features, and improvements fixed in this version

** Sub-task
    * [CXF-8458] - jaxrs.api.rs.core.linkbuilder buildNoArgsThrowsUriBuilderExceptionTest
    * [CXF-8459] - jaxrs.api.rs.core.linkbuilder buildObjectsThrowsUriBuilderExceptionTest
    * [CXF-8460] - jaxrs.api.rs.core.linkbuilder buildRelativizedThrowsUriBuilderExceptionTest
    * [CXF-8478] - jaxrs.ee.rs.container.requestcontext setRequestUriTwoUrisTest

** Bug
    * [CXF-8689] - cxf-java2ws-plugin plugin running on non-modular JDK fails with NullPointerException
    * [CXF-8694] - CXF 3.5.0 Generated WSDL root element
    * [CXF-8698] - Content-ID of attachments for outgoing requests are URL-decoded instead of URL-encoded
    * [CXF-8702] - Graceful shutdown : Error 404 with "Can't find the request for XXXXX's Observer" on - Springboot + CXF Server
    * [CXF-8703] - PAX Maven URL does not take local Maven repository into account

** Improvement
    * [CXF-8683] - Support SwaggerUI 4.10.3+
    * [CXF-8688] - Accomodate some RFC 3986 checks to filter out invalid URIs
    * [CXF-8699] - Abillity to set sensitive filters on LoggingFeature

** Task
    * [CXF-8695] - Remove duplicate copied class from cxf-core in cxf-rt-management when build with JDK11
    * [CXF-8711] - Jakarta EE TCKs and compatibility
